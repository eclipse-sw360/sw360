/*
 * Copyright Siemens AG, 2016. Part of the SW360 Portal Project.
 *
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 */
package org.eclipse.sw360.vulnerabilities.db;

import com.ibm.cloud.cloudant.v1.model.DesignDocumentViewsMapReduce;
import org.eclipse.sw360.datahandler.cloudantclient.DatabaseConnectorCloudant;
import org.eclipse.sw360.datahandler.cloudantclient.DatabaseRepositoryCloudantClient;
import org.eclipse.sw360.datahandler.common.CommonUtils;
import org.eclipse.sw360.datahandler.thrift.vulnerabilities.ReleaseVulnerabilityRelation;

import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;

/**
 * CRUD access for the ReleaseVulnerabilityRelation class
 *
 * @author stefan.jaeger@evosoft.com
 */
public class VulnerabilityRelationRepository extends DatabaseRepositoryCloudantClient<ReleaseVulnerabilityRelation> {

    private static final String ALL =
            "function(doc) {" +
                    "  if (doc.type == 'releasevulnerabilityrelation')" +
                    "    emit(null, doc._id) " +
                    "}";

    private static final String BY_IDs_VIEW =
            "function(doc) {" +
                    "  if (doc.type == 'releasevulnerabilityrelation') {" +
                    "    emit([doc.releaseId, doc.vulnerabilityId], null);" +
                    "  } " +
                    "}";

    private static final String BY_RELEASE_ID_VIEW =
            "function(doc) {" +
                    "  if (doc.type == 'releasevulnerabilityrelation') {" +
                    "    emit(doc.releaseId, null);" +
                    "  } " +
                    "}";

    private static final String BY_VULNERABILITY_ID_VIEW =
            "function(doc) {" +
                    "  if (doc.type == 'releasevulnerabilityrelation') {" +
                    "    emit(doc.vulnerabilityId, null);" +
                    "  } " +
                    "}";

    public VulnerabilityRelationRepository(DatabaseConnectorCloudant db) {
        super(db, ReleaseVulnerabilityRelation.class);

        Map<String, DesignDocumentViewsMapReduce> views = new HashMap<>();
        views.put("all", createMapReduce(ALL, null));
        views.put("byids", createMapReduce(BY_IDs_VIEW, null));
        views.put("byReleaseId", createMapReduce(BY_RELEASE_ID_VIEW, null));
        views.put("byVulnerabilityId", createMapReduce(BY_VULNERABILITY_ID_VIEW, null));
        initStandardDesignDocument(views, db);
    }

    public ReleaseVulnerabilityRelation getRelationByIds(String releaseId, String vulnerabilityId) {
        final Set<String> idList = queryForIdsAsComplexValue("byids", releaseId, vulnerabilityId);
        if (idList != null && !idList.isEmpty())
            return get(CommonUtils.getFirst(idList));
        return null;
    }

    public List<ReleaseVulnerabilityRelation> getRelationsByReleaseIds(Collection<String> releaseIds) {
        return queryByIds("byReleaseId", releaseIds);
    }

    public List<ReleaseVulnerabilityRelation> getRelationsByVulnerabilityId(String vulnerabilityId) {
        return queryView("byVulnerabilityId", vulnerabilityId);
    }
}
