/*
 * Copyright Siemens AG, 2025. Part of the SW360 Portal Project.
 *
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 */
package org.eclipse.sw360.datahandler.db;

import com.ibm.cloud.cloudant.v1.Cloudant;
import com.google.gson.Gson;
import org.eclipse.sw360.datahandler.cloudantclient.DatabaseConnectorCloudant;
import org.eclipse.sw360.datahandler.common.SW360Constants;
import org.eclipse.sw360.datahandler.couchdb.lucene.NouveauLuceneAwareDatabaseConnector;
import org.eclipse.sw360.datahandler.resourcelists.ResourceClassNotFoundException;
import org.eclipse.sw360.datahandler.resourcelists.ResourceComparatorGenerator;
import org.eclipse.sw360.datahandler.thrift.PaginationData;
import org.eclipse.sw360.datahandler.thrift.vulnerabilities.Vulnerability;
import org.eclipse.sw360.datahandler.thrift.vulnerabilities.VulnerabilitySortColumn;
import org.eclipse.sw360.nouveau.designdocument.NouveauDesignDocument;
import org.eclipse.sw360.nouveau.designdocument.NouveauIndexDesignDocument;
import org.eclipse.sw360.nouveau.designdocument.NouveauIndexFunction;

import java.io.IOException;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.Map;
import java.util.Set;

import static org.eclipse.sw360.nouveau.LuceneAwareCouchDbConnector.DEFAULT_DESIGN_PREFIX;

/**
 * Lucene search for the Vulnerability class
 */
public class VulnerabilitySearchHandler {

    private static final String DDOC_NAME = DEFAULT_DESIGN_PREFIX + "lucene";

    private static final NouveauIndexDesignDocument luceneSearchView
            = new NouveauIndexDesignDocument("vulnerabilities",
            new NouveauIndexFunction(
                    "function(doc) {" +
                            "  if(doc.type == 'vulnerability') {" +
                            "    if (typeof(doc.externalId) == 'string' && doc.externalId.length > 0) {" +
                            "      index('text', 'externalId', doc.externalId, {'store': true});" +
                            "    }" +
                            "    if (typeof(doc.title) == 'string' && doc.title.length > 0) {" +
                            "      index('text', 'title', doc.title, {'store': true});" +
                            "    }" +
                            "  }" +
                            "}"));

    private final NouveauLuceneAwareDatabaseConnector connector;

    public VulnerabilitySearchHandler(Cloudant client) throws IOException {
        // Creates the database connector and adds the lucene search view
        DatabaseConnectorCloudant db = new DatabaseConnectorCloudant(client, "sw360vm");
        connector = new NouveauLuceneAwareDatabaseConnector(db, DDOC_NAME, "sw360vm", db.getInstance().getGson());
        Gson gson = db.getInstance().getGson();
        NouveauDesignDocument searchView = new NouveauDesignDocument();
        searchView.setId(DDOC_NAME);
        searchView.addNouveau(luceneSearchView, gson);
        connector.addDesignDoc(searchView);
    }

    public Map<PaginationData, List<Vulnerability>> search(String searchText, PaginationData pageData) {
        Map<String, Set<String>> subQueryRestrictions = Map.of(
                Vulnerability._Fields.TITLE.getFieldName(), Collections.singleton(searchText),
                Vulnerability._Fields.EXTERNAL_ID.getFieldName(), Collections.singleton(searchText)
        );

        return connector.searchViewWithRestrictions(Vulnerability.class,
                luceneSearchView.getIndexName(), null, subQueryRestrictions,
                pageData, null, pageData.isAscending());
    }
}
