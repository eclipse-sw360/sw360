#
# Copyright Siemens AG, 2017, 2019. Part of the SW360 Portal Project.
# Copyright Cariad SE, 2024. Part of the SW360 Portal Project.
#
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#

# Port to open in standalone mode
server:
  port: 8090

# Connection to the couch databases. Will be used to store client credentials
couchdb:
  url: http://localhost:5984
  database: sw360oauthclients
  # if your couchdb does not use authentication, pls just don't use the settings for username and password
  username: sw360
  password: sw360fossie

jwt:
  secretkey: sw360SecretKey
  auth:
    converter:
      principle-attribute: email

spring:
  jackson:
    serialization:
      indent_output: true
  main:
    allow-circular-references: true

# Common SW360 properties
sw360:
  # The url of the Liferay instance
  sw360-portal-server-url: ${SW360_PORTAL_SERVER_URL:http://127.0.0.1:8080}
  # The id of the company in Liferay that sw360 is run for
  sw360-liferay-company-id: ${SW360_LIFERAY_COMPANY_ID:20101}
  # Allowed origins that should be set in the header
  cors:
    allowed-origin: ${SW360_CORS_ALLOWED_ORIGIN:#{null}}

security:
  # Configuration for enabling authorization via headers, e.g. when using SSO
  # in combination with a reverse proxy server
  customheader:
    headername:
      # You have to enable authorization by headers explicitly here
      enabled: false
      # Attention: please make sure that the proxy is removing there headers
      # if they are coming from anywhere else then the authentication server
      intermediateauthstore: custom-header-auth-marker
      email: authenticated-email
      extid: authenticated-extid
      # also available - at least in saml pre auth - are "givenname", "surname" and "department"

  oauth2:
    resource:
      id: sw360-REST-API
  accesstoken:
    validity: 30

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
    org.springframework.security.oauth2.provider.endpoint: DEBUG
    org.springframework.security.oauth2.provider.error: DEBUG
    org.springframework.security.oauth2.provider.token: DEBUG
    org.springframework.security.oauth2.provider.token.store: DEBUG
    org.springframework.security.oauth2.provider.token.store.jwk: DEBUG

