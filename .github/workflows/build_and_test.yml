# -----------------------------------------------------------------------------
# Copyright Siemens AG, 2021.
# Copyright Helio Chissini de Castro 2022-2025
# Part of the SW360 Portal Project.
#
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#
# -----------------------------------------------------------------------------

name: SW360 Build and Test

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - third-party/**
      - Dockerfile
      - docker_build.sh
      - .github/sw360_container.yml
      - .github/thrift_container.yml
  workflow_dispatch:

env:
  COUCHDB_USER: sw360
  COUCHDB_PASSWORD: sw360fossie
  THRIFT_VERSION: "0.20.0"

permissions:
  contents: read

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-24.04

    services:
      couchdb:
        image: couchdb:3
        ports:
          - 5984:5984
        env:
          COUCHDB_USER: ${{ env.COUCHDB_USER }}
          COUCHDB_PASSWORD: ${{ env.COUCHDB_PASSWORD }}

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: webiny/action-conventional-commits@8bc41ff4e7d423d56fa4905f6ff79209a78776c7 # v1.3.0

      - name: Verify license headers
        run: |
          chmod +x .github/testForLicenseHeaders.sh
          bash .github/testForLicenseHeaders.sh

      - name: Update properties with DB credentials
        run: |
          sudo mkdir -p /etc/sw360
          sudo cp ./build-configuration/test-resources/couchdb-test.properties /etc/sw360/
          sudo sed -i 's/^couchdb.user\s*=/& '${COUCHDB_USER}'/' /etc/sw360/couchdb-test.properties
          sudo sed -i 's/^couchdb.password\s*=/& '${COUCHDB_PASSWORD}'/' /etc/sw360/couchdb-test.properties

      - name: Set up JDK 21
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5.0.0
        with:
          java-version: "21"
          distribution: "temurin"
          check-latest: true

      - name: Cache Thrift
        id: cache-thrift
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: |
            ${{ github.workspace }}/dist/thrift-${{ env.THRIFT_VERSION }}
          key: ${{ runner.os }}-thrift-${{ env.THRIFT_VERSION }}
          restore-keys: |
            ${{ runner.os }}-thrift-${{ env.THRIFT_VERSION }}

      - name: Install Thrift
        if: steps.cache-thrift.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update -qq
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -yq build-essential libevent-dev libtool flex bison pkg-config libssl-dev git cmake
          chmod +x third-party/thrift/install-thrift.sh
          DESTDIR=${{ github.workspace }}/dist/thrift-${{ env.THRIFT_VERSION }} third-party/thrift/install-thrift.sh

      - name: Build SW360 with Tests and Coverage
        run: |
          export PATH=$PATH:${{ github.workspace }}/dist/thrift-${{ env.THRIFT_VERSION }}/usr/local/bin
          mvn clean verify \
            --no-transfer-progress \
            -P deploy -Dhelp-docs=true \
            -Dbase.deploy.dir=. \
            -Djars.deploy.dir=${PWD}/deploy \
            -Dbackend.deploy.dir=${PWD}/deploy/webapps \
            -Drest.deploy.dir=${PWD}/deploy/webapps \
            -DRunComponentVisibilityRestrictionTest=false \
            -DRunPrivateProjectAccessTest=false \
            -DRunRestForceUpdateTest=false \
            -fae \
            -Dmaven.plugin.validation=VERBOSE

      - name: Generate Coverage Reports
        run: |
          mvn jacoco:report-aggregate
          
      - name: Parse Coverage Percentage
        id: coverage
        run: |
          if [ -f "./target/site/jacoco-aggregate/jacoco.xml" ]; then
            # Extract coverage percentage from XML
            COVERAGE=$(grep -o 'line-rate="[^"]*"' ./target/site/jacoco-aggregate/jacoco.xml | head -1 | cut -d'"' -f2)
            if [ ! -z "$COVERAGE" ]; then
              COVERAGE_PCT=$(echo "$COVERAGE * 100" | bc -l | cut -c1-5)
              echo "coverage=$COVERAGE_PCT" >> $GITHUB_OUTPUT
              echo "✅ Coverage percentage extracted: ${COVERAGE_PCT}%"
            else
              echo "coverage=0" >> $GITHUB_OUTPUT
              echo "⚠️ Could not extract coverage percentage"
            fi
          else
            echo "coverage=0" >> $GITHUB_OUTPUT
            echo "❌ Coverage report not found"
            exit 1
          fi
          
      - name: Display Test and Coverage Summary
        run: |
          echo "=== TEST EXECUTION SUMMARY ==="
          echo "✅ Unit Tests (UTs) executed from:"
          echo "   • backend/ (all modules)"
          echo "   • libraries/ (datahandler, importers, exporters, etc.)"
          echo "   • clients/ (client, http-support)"
          echo "   • keycloak/ (event-listeners, user-storage-provider)"
          echo ""
          echo "✅ Integration Tests (ITs) executed from:"
          echo "   • rest/resource-server/ (all integration tests)"
          echo ""
          echo "=== COVERAGE SUMMARY ==="
          echo "📊 Overall Code Coverage: ${{ steps.coverage.outputs.coverage }}%"
          echo "📁 Coverage reports available in:"
          echo "   • Combined: ./target/site/jacoco-aggregate/"
          echo "   • Individual: */target/site/jacoco/"
          
      - name: Upload Coverage Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            target/site/jacoco-aggregate/
            */target/site/jacoco/
          retention-days: 30
          
      - name: Comment Coverage in PR
        uses: romeovs/lcov-reporter-action@v0.3.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          lcov-file: ./target/site/jacoco-aggregate/jacoco.xml
          filter-changed-files: false
          delete-old-comments: false
        continue-on-error: true
        
      - name: Create Coverage Summary Comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const coverage = '${{ steps.coverage.outputs.coverage }}';
            const comment = `## 📊 SW360 Test Coverage Report
            
            ### ✅ Test Execution Summary
            **Unit Tests (UTs) executed from:**
            - \`backend/\` (all modules)
            - \`libraries/\` (datahandler, importers, exporters, etc.)
            - \`clients/\` (client, http-support)
            - \`keycloak/\` (event-listeners, user-storage-provider)
            
            **Integration Tests (ITs) executed from:**
            - \`rest/resource-server/\` (all integration tests)
            
            ### 📈 Coverage Results
            **Overall Code Coverage: ${coverage}%**
            
            ### 📁 Coverage Reports Available
            - **Combined Report**: \`target/site/jacoco-aggregate/\`
            - **Individual Reports**: \`*/target/site/jacoco/\`
            - **Download**: Available in Actions → Artifacts → coverage-reports
            
            ---
            *Generated automatically by SW360 CI/CD pipeline*`;
            
            // Delete previous coverage comments
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            
            const coverageComments = comments.filter(comment => 
              comment.body.includes('SW360 Test Coverage Report')
            );
            
            for (const comment of coverageComments) {
              await github.rest.issues.deleteComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: comment.id
              });
            }
            
            // Add new coverage comment
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });

      - name: Run PrivateProjectAccessTest
        run: |
          mvn install -pl :build-configuration -am -Dbase.deploy.dir=.
          mvn -pl :datahandler test -Dtest=ProjectPermissionsVisibilityTest -DRunPrivateProjectAccessTest=true -DRunRestForceUpdateTest=true -Dbase.deploy.dir=.

      - name: Run BulkReleaseDeletingTest
        run: |
          mvn -pl :backend-components test -Dtest=BulkDeleteUtilTest -DRunPrivateProjectAccessTest=true -DRunBulkReleaseDeletingTest=true -Dbase.deploy.dir=.
