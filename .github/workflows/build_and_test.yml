# -----------------------------------------------------------------------------
# Copyright Siemens AG, 2021.
# Part of the SW360 Portal Project.
#
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#
# -----------------------------------------------------------------------------

name: SW360 Build and Test

on:
  pull_request:
    branches: [main]
    paths-ignore:
      - "**.md"
      - ".github/workflows/docker_deploy.yml"
      - ".github/workflows/scorecard.yml"
  workflow_dispatch:

permissions: write-all

env:
  COUCHDB_USER: admin
  COUCHDB_PASSWORD: password

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
      - uses: webiny/action-conventional-commits@v1.3.0

      - name: Verify license headers
        run: |
          chmod +x .github/testForLicenseHeaders.sh
          bash .github/testForLicenseHeaders.sh

      - name: Set environment variables
        run: |
          cat .versions >> $GITHUB_ENV

      - name: Setup CouchDB
        run: scripts/startCouchdbForTests.sh

      - name: Update properties with DB credentials
        run: |
          sudo mkdir -p /etc/sw360
          sudo cp ./build-configuration/test-resources/couchdb-test.properties /etc/sw360/
          sudo cp ./scripts/sw360BackendRestDockerConfig/etc_sw360/rest-test.properties /etc/sw360/
          sudo sed -i 's/^couchdb.user\s*=/& '${COUCHDB_USER}'/' /etc/sw360/couchdb-test.properties
          sudo sed -i 's/^couchdb.password\s*=/& '${COUCHDB_PASSWORD}'/' /etc/sw360/couchdb-test.properties

      - name: Prepare build environment
        run: |
          sudo apt-get update -qq
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -yq python3-pip build-essential libevent-dev automake libtool flex bison pkg-config libssl-dev git cmake
          pip install mkdocs mkdocs-material

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          check-latest: true
          cache: "maven"

      - name: Cache Thrift
        id: cache-thrift
        uses: actions/cache@v4
        with:
          path: |
            /var/lib/thrift-${{ env.THRIFT_VERSION }}
          key: ${{ runner.os }}-thrift-${{ env.THRIFT_VERSION }}
          restore-keys: |
            ${{ runner.os }}-thrift-${{ env.THRIFT_VERSION }}

      - name: Install Thrift
        if: steps.cache-thrift.outputs.cache-hit != 'true'
        run: |
          chmod +x scripts/install-thrift.sh
          sudo DESTDIR=/var/lib//thrift-${{ env.THRIFT_VERSION }} scripts/install-thrift.sh

      - name: Build SW360
        run: |
          export PATH=$PATH:/var/lib//thrift-${{ env.THRIFT_VERSION }}/usr/local/bin
          mvn clean install --no-transfer-progress -P deploy -Dhelp-docs=true -Dbase.deploy.dir=. -Djars.deploy.dir=${PWD}/deploy -Dbackend.deploy.dir=${PWD}/deploy/webapps -Drest.deploy.dir=${PWD}/deploy/webapps -DRunComponentVisibilityRestrictionTest=false -DRunPrivateProjectAccessTest=false -DRunRestForceUpdateTest=false -fae

      - name: Run PrivateProjectAccessTest
        run: |
          mvn install -pl :build-configuration -am -Dbase.deploy.dir=.
          mvn -pl :datahandler test -Dtest=ProjectPermissionsVisibilityTest -DRunPrivateProjectAccessTest=true -DRunRestForceUpdateTest=true -Dbase.deploy.dir=.

      - name: Run BulkReleaseDeletingTest
        run: |
          mvn -pl :src-components test -Dtest=BulkDeleteUtilTest -DRunPrivateProjectAccessTest=true -DRunBulkReleaseDeletingTest=true -Dbase.deploy.dir=.

      # - name: Deploy Backend and Rest Server
      #   run: |
      #     sudo docker build -t sw360backendrest -f sw360BackendRest.Dockerfile .
      #     sudo docker run -dt --network=host sw360backendrest
      #     bash scripts/sw360BackendRestDockerConfig/scripts/checkDeploymentIsSuccess.sh

      # - name: Create users and oauth client
      #   run: bash scripts/sw360BackendRestDockerConfig/scripts/createUserAndOauthClient.sh

      # - name: Run Client Integration Test for Rest Api
      #   run: |
      #     cd clients
      #     mvn clean install --no-transfer-progress -DRunRestIntegrationTest=true

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
